function [x_without_prop, ...
            x_with_prop,...
            power_total_without_prop,...
            power_total_with_prop] = power_compare_prop(trim_function, ...
                                                        LowerRotor_inteference, ...
                                                        UpperRotor_inteference, ...
                                                        Prop_theta_0, ...
                                                        Fus_isEnable, ...
                                                        HorStab_delta_e, ...
                                                        HorStab_isEnable, ...
                                                        VerStab_delta_r, ...
                                                        VerStab_isEnable, ...
                                                        theta_1c_diff, ...
                                                        theta_1s_diff)
%POWER_COMPARE 该函数用来比较有无尾推的需用功率
%   trim_function:              fsolve used function @+func_name eg:@Aerodynamics_trim_2rotor_prop_8var
%   LowerRotor_inteference:     LowerRotor.inteference = 0(default), 1 or 2
%   UpperRotor_inteference:     UpperRotor.inteference = 0(default), 1 or 2
%   Prop_theta_0:               Prop.theta_0 (rad)
%   Fus_isEnable:               Fus.isEnable = 0(default) or 1
%   HorStab_delta_e:            HorStab.delta_e = HorStab_delta_e (rad)
%   HorStab_isEnable:           HorStab.isEnable = 0(default) or 1
%   VerStab_delta_r:            VerStab.delta_r = VerStab_delta_r (rad)
%   VerStab_isEnable:           VerStab.isEnable = 0(default) or 1
%   theta_1c_diff:              
%   theta_1s_diff:   

global LowerRotor UpperRotor
global Prop 


options         = optimset('Display','off','TolFun',1e-15,'Maxiter',5000,'Algorithm','levenberg-marquardt' ,'MaxFunEvals',20000);
InitialStates   = [0.01,0,0,0,0,0,10,10];

% 无尾推
[x_without_prop,~,~,~,power_total_without_prop] = trim_solve(trim_function, ... 
                                InitialStates, ...
                                options, ...
                                LowerRotor_inteference, ...                  % LowerRotor.inteference
                                UpperRotor_inteference, ...                  % UpperRotor.inteference
                                Prop_theta_0, ...         % Prop.theta_0
                                0, ...                  % Prop.isEnable
                                Fus_isEnable, ...                  % Fus.isEnable
                                HorStab_delta_e, ...         % HorStab.delta_e
                                HorStab_isEnable, ...                  % HorStab.isEnable
                                VerStab_delta_r, ...          % VerStab.delta_r
                                VerStab_isEnable, ...                  % VerStab.isEnable
                                theta_1c_diff, ...         % theta_1c_diff
                                theta_1s_diff);            % theta_1s_diff
power_lower_rotor_total_without_prop = LowerRotor.Power_total;
power_lower_rotor_induced_without_prop = LowerRotor.Power_induced;
power_lower_rotor_resist_without_prop = LowerRotor.Power_resist;
power_upper_rotor_total_without_prop = UpperRotor.Power_total;
power_upper_rotor_induced_without_prop = UpperRotor.Power_induced;
power_upper_rotor_resist_without_prop = UpperRotor.Power_resist;

disp('-------Without propeller-------');
disp(['Total power: ', num2str(power_total_without_prop)]);
disp(['Lower Rotor total power is ', ...
        num2str(power_lower_rotor_total_without_prop), ...
        ' power for induced flow is ', ...
        num2str(power_lower_rotor_induced_without_prop), ...
        ' power for resist is ', ...
        num2str(power_lower_rotor_resist_without_prop)])
disp(['Upper Rotor total power is ', ...
        num2str(power_upper_rotor_total_without_prop), ...
        ' power for induced flow is ', ...
        num2str(power_upper_rotor_induced_without_prop), ...
        ' power for resist is ', ...
        num2str(power_upper_rotor_resist_without_prop)])
                            
% 有尾推
[x_with_prop,~,~,~,power_total_with_prop] = trim_solve(trim_function, ... 
                                InitialStates, ...
                                options, ...
                                LowerRotor_inteference, ...                  % LowerRotor.inteference
                                UpperRotor_inteference, ...                  % UpperRotor.inteference
                                Prop_theta_0, ...         % Prop.theta_0
                                1, ...                  % Prop.isEnable
                                Fus_isEnable, ...                  % Fus.isEnable
                                HorStab_delta_e, ...         % HorStab.delta_e
                                HorStab_isEnable, ...                  % HorStab.isEnable
                                VerStab_delta_r, ...          % VerStab.delta_r
                                VerStab_isEnable, ...                  % VerStab.isEnable
                                theta_1c_diff, ...         % theta_1c_diff
                                theta_1s_diff);            % theta_1s_diff
power_lower_rotor_total_with_prop = LowerRotor.Power_total;
power_lower_rotor_induced_with_prop = LowerRotor.Power_induced;
power_lower_rotor_resist_with_prop = LowerRotor.Power_resist;
power_upper_rotor_total_with_prop = UpperRotor.Power_total;
power_upper_rotor_induced_with_prop = UpperRotor.Power_induced;
power_upper_rotor_resist_with_prop = UpperRotor.Power_resist;

disp('-------With propeller-------');
disp(['Total power: ', num2str(power_total_with_prop)]);
disp(['Lower Rotor total power is ', ...
        num2str(power_lower_rotor_total_with_prop), ...
        ' power for induced flow is ', ...
        num2str(power_lower_rotor_induced_with_prop), ...
        ' power for resist is ', ...
        num2str(power_lower_rotor_resist_with_prop)])
disp(['Upper Rotor total power is ', ...
        num2str(power_upper_rotor_total_with_prop), ...
        ' power for induced flow is ', ...
        num2str(power_upper_rotor_induced_with_prop), ...
        ' power for resist is ', ...
        num2str(power_upper_rotor_resist_with_prop)])
disp(['Propeller induced power is ', num2str(Prop.Power_induced)]);

disp('-------Comparaison-------')
disp('with propeller, the total power for rotors decreased by');
disp(num2str(power_lower_rotor_total_without_prop ...
                +power_upper_rotor_total_without_prop ...
                -power_lower_rotor_total_with_prop ...
                -power_upper_rotor_total_with_prop))

disp(['with more of ',num2str(Prop.Power_induced), ' W for propeller']) 
end

