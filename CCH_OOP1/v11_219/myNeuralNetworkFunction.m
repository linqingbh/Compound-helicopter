function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 21-Feb-2021 20:06:42.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx7 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx1 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.0548435644958545;0.000436746706432456;0;-0.436104673918752;-0.5225422804963;-0.0174486658774027;5.5182586226124e-06];
x1_step1.gain = [0.0133518832747249;3.18636719676031;2;2.29294952647266;1.9128431747841;57.4334223724491;25.4903632984437];
x1_step1.ymin = -1;

% Layer 1
b1 = [-0.35174196025487663997;0.93254911876487245337;0.41683022417254539382;0.84630313648565824725;-0.7466055459856921761;-0.76992535053457089589;3.3735162057394938451;0.020434253444092848745;1.0472767731324452711;0.11810140486092265966;0.4605064558003280073;0.088190947799489396997;-1.1705304935750371342;-0.023616253187204207242;0.35349171876483093113];
IW1_1 = [-1.1878367696402356568 0.0094584259352555495604 0.025489923570034100919 -0.07378056795466506057 -2.1118322283046548904 -0.033460834732194473518 -0.0074547959726606197531;-0.11527924894408625445 1.2961687135165149698 -2.3343951958707656047 0.05866665133147343919 -0.62609958164890422427 0.070070373053797110896 0.38727390936671624022;1.1636989057155566751 0.045244253507584722418 0.020819343346889559315 0.0085402382859923672842 1.5152622245420328539 -0.0018567248628247236958 0.0080668811141871021864;2.4790595727636230983 0.018799652958330023006 0.039729580750503638853 -0.03122998505428185162 -0.29058619375935990092 -0.02046828356764292603 0.018638554655728004766;0.22114326972166969965 -1.0613941216142099844 2.2542340564190244123 -0.049159767801818458899 0.35846339283224637473 -0.044931179520506604741 -0.24856660993059270792;-1.1368838017647824312 -0.028802372668326595151 -0.024132633799374025863 0.035755143807086359198 0.31307165402909614693 0.0088779038428521764303 -0.012390649584661649063;-2.1149255994854816443 -0.034137627440841783466 -0.014957669839682854324 0.42621681558069374196 -1.8352792943343982923 -0.018764547216299439641 0.0013199341305010895732;0.35202682582887717677 -0.027676125062089412809 0.54727578781429275789 0.010540360424967788744 -0.35118927913904096627 0.0069279883343952540498 0.0003897879511187887086;0.60046271748107926669 -0.096926384185387876036 0.87148765093030822193 0.1740261599235859713 2.3108319696492083395 0.089881582983630636807 0.0106002417300263517;-1.1826827727684119385 0.28216973567745873286 0.39247832270561489043 0.030141446748927290533 1.085964243705997978 0.059222730606966117461 -0.066737428925731354101;-0.49809153698662717025 0.0018694387506503831742 -0.042270963595887771358 0.11147014333568398825 1.5942811264820166972 0.014752985185361645881 0.027191924921240260421;-0.75171606033055704543 0.19801928274076485703 0.17553329565421349479 0.04832952997238182391 1.1817347128441437754 0.024200161817434461681 -0.018664821288331096688;-0.6598864921104904413 -0.042921343966050171104 1.2164282671678621206 -0.20320211211916472394 -2.6365014897330989463 -0.10633601566198122579 0.011881617934257184335;-0.84069758191485288723 0.039576834670504067171 0.68938185396883655542 -0.026424258482802259057 0.70409311478024516617 0.0020836885906999622411 -0.06433152036189170031;0.61133364431402970052 0.079503212243882501187 0.031248016749491291932 -0.05910172327764625505 0.67025323770468114848 -0.015175185566400349255 -0.0090081536701143161139];

% Layer 2
b2 = 0.90359538222599478097;
LW2_1 = [-1.1207543805994379937 -0.65039399792554952739 -1.6157074342041894965 0.40482124788801210347 -1.2234196697084649408 1.8301985605048947114 -1.1029826415745134227 1.8641972686112102675 -0.4081065336224972695 0.53708966165134686133 0.67789455153729838432 -0.75022422360490792492 0.38266991073549166957 -0.74316701369787163678 1.7908856808618973666];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 5.12989233346364e-07;
y1_step1.xoffset = 367521.295388283;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
